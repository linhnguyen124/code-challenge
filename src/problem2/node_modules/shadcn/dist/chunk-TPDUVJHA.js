import { z } from 'zod';

var e=z.enum(["registry:lib","registry:block","registry:component","registry:ui","registry:hook","registry:page","registry:file","registry:theme","registry:example","registry:style","registry:internal"]),i=z.discriminatedUnion("type",[z.object({path:z.string(),content:z.string().optional(),type:z.enum(["registry:file","registry:page"]),target:z.string()}),z.object({path:z.string(),content:z.string().optional(),type:e.exclude(["registry:file","registry:page"]),target:z.string().optional()})]),s=z.object({config:z.object({content:z.array(z.string()).optional(),theme:z.record(z.string(),z.any()).optional(),plugins:z.array(z.string()).optional()}).optional()}),n=z.object({light:z.record(z.string(),z.string()).optional(),dark:z.record(z.string(),z.string()).optional()}),r=z.object({$schema:z.string().optional(),name:z.string(),type:e,title:z.string().optional(),author:z.string().min(2).optional(),description:z.string().optional(),dependencies:z.array(z.string()).optional(),devDependencies:z.array(z.string()).optional(),registryDependencies:z.array(z.string()).optional(),files:z.array(i).optional(),tailwind:s.optional(),cssVars:n.optional(),meta:z.record(z.string(),z.any()).optional(),docs:z.string().optional(),categories:z.array(z.string()).optional()}),a=z.object({name:z.string(),homepage:z.string(),items:z.array(r)}),g=z.array(r),c=z.array(z.object({name:z.string(),label:z.string()})),p=z.record(z.string(),z.record(z.string(),z.string())),l=z.object({inlineColors:z.object({light:z.record(z.string(),z.string()),dark:z.record(z.string(),z.string())}),cssVars:z.object({light:z.record(z.string(),z.string()),dark:z.record(z.string(),z.string())}),inlineColorsTemplate:z.string(),cssVarsTemplate:z.string()}),y=r.pick({dependencies:!0,devDependencies:!0,files:!0,tailwind:!0,cssVars:!0,docs:!0});

export { e as a, i as b, s as c, n as d, r as e, a as f, g, c as h, p as i, l as j, y as k };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=chunk-TPDUVJHA.js.map